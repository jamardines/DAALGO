public class TreasureHunter {

    public static int maxTreasure(int[][] grid) {
        int N = grid.length;
        int M = grid[0].length;
        int[][] dp = new int[N][M];

        // Initialize the starting point
        dp[0][0] = grid[0][0];

        // Fill the first row
        for (int j = 1; j < M; j++) {
            dp[0][j] = dp[0][j - 1] + grid[0][j];
        }

        // Fill the first column
        for (int i = 1; i < N; i++) {
            dp[i][0] = dp[i - 1][0] + grid[i][0];
        }

        // Fill the rest of the dp array
        for (int i = 1; i < N; i++) {
            for (int j = 1; j < M; j++) {
                dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]) + grid[i][j];
            }
        }

        // The maximum treasure collected will be in the bottom-right corner
        return dp[N - 1][M - 1];
    }

    public static void main(String[] args) {
        int[][] grid = {
            {5, 1, 7, 4},
            {2, 8, 3, 9},
            {6, 4, 5, 2}
        };
        System.out.println("Maximum treasure collected: " + maxTreasure(grid));
    }
}
